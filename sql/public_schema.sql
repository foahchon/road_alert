--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.1

-- Started on 2023-02-09 21:03:20

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 14 (class 2615 OID 2200)
-- Name: public; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA public;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 266 (class 1259 OID 26964)
-- Name: incident_notes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.incident_notes (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    text text,
    user_id uuid,
    incident_id bigint
);


--
-- TOC entry 268 (class 1259 OID 27001)
-- Name: incident_notes_view; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.incident_notes_view AS
 SELECT n.id,
    u.email AS "user",
    n.text,
    n.incident_id,
    n.created_at
   FROM (public.incident_notes n
     JOIN auth.users u ON ((n.user_id = u.id)));


--
-- TOC entry 261 (class 1259 OID 26892)
-- Name: incidents; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.incidents (
    id bigint NOT NULL,
    description text NOT NULL,
    address text,
    created_at timestamp with time zone DEFAULT now(),
    user_id uuid,
    image_path text,
    latitude double precision,
    longitude double precision,
    zip_code text,
    complete boolean DEFAULT false
);


--
-- TOC entry 262 (class 1259 OID 26895)
-- Name: incidents_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.incidents ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.incidents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 269 (class 1259 OID 27008)
-- Name: incidents_with_users; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.incidents_with_users AS
 SELECT i.id,
    i.description,
    i.address,
    i.created_at,
    i.user_id,
    i.image_path,
    i.latitude,
    i.longitude,
    i.zip_code,
    i.complete,
    u.email
   FROM (public.incidents i
     JOIN auth.users u ON ((i.user_id = u.id)));


--
-- TOC entry 267 (class 1259 OID 26967)
-- Name: notes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.incident_notes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 265 (class 1259 OID 26946)
-- Name: profiles; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.profiles (
    manages_zip text,
    created_at timestamp with time zone DEFAULT now(),
    user_id uuid NOT NULL
);


--
-- TOC entry 2760 (class 2606 OID 26984)
-- Name: incidents incidents_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.incidents
    ADD CONSTRAINT incidents_id_key UNIQUE (id);


--
-- TOC entry 2762 (class 2606 OID 26903)
-- Name: incidents incidents_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.incidents
    ADD CONSTRAINT incidents_pkey PRIMARY KEY (id, description);


--
-- TOC entry 2766 (class 2606 OID 26975)
-- Name: incident_notes notes_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.incident_notes
    ADD CONSTRAINT notes_pkey PRIMARY KEY (id);


--
-- TOC entry 2764 (class 2606 OID 26953)
-- Name: profiles profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_pkey PRIMARY KEY (user_id);


--
-- TOC entry 2769 (class 2606 OID 26985)
-- Name: incident_notes incident_notes_incident_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.incident_notes
    ADD CONSTRAINT incident_notes_incident_id_fkey FOREIGN KEY (incident_id) REFERENCES public.incidents(id);


--
-- TOC entry 2770 (class 2606 OID 26976)
-- Name: incident_notes incident_notes_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.incident_notes
    ADD CONSTRAINT incident_notes_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);


--
-- TOC entry 2767 (class 2606 OID 26904)
-- Name: incidents incidents_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.incidents
    ADD CONSTRAINT incidents_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);


--
-- TOC entry 2768 (class 2606 OID 26954)
-- Name: profiles profiles_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);


--
-- TOC entry 2923 (class 3256 OID 26960)
-- Name: incidents Managers can read rows from zip codes they manage; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Managers can read rows from zip codes they manage" ON public.incidents FOR SELECT TO authenticated USING ((zip_code IN ( SELECT profiles.manages_zip
   FROM public.profiles
  WHERE (profiles.user_id = auth.uid()))));


--
-- TOC entry 2924 (class 3256 OID 26961)
-- Name: incidents Managers can update rows from zip codes they manage; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Managers can update rows from zip codes they manage" ON public.incidents FOR UPDATE TO authenticated USING ((zip_code IN ( SELECT profiles.manages_zip
   FROM public.profiles
  WHERE (profiles.user_id = auth.uid())))) WITH CHECK ((zip_code IN ( SELECT profiles.manages_zip
   FROM public.profiles
  WHERE (profiles.user_id = auth.uid()))));


--
-- TOC entry 2922 (class 3256 OID 26959)
-- Name: profiles User can only perform CRUD operations on their own profile; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "User can only perform CRUD operations on their own profile" ON public.profiles TO authenticated USING ((user_id = auth.uid())) WITH CHECK ((user_id = auth.uid()));


--
-- TOC entry 2921 (class 3256 OID 26937)
-- Name: incidents User can perform CRUD only own incidents; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "User can perform CRUD only own incidents" ON public.incidents TO authenticated USING ((user_id = auth.uid())) WITH CHECK ((user_id = auth.uid()));


--
-- TOC entry 2919 (class 0 OID 26892)
-- Dependencies: 261
-- Name: incidents; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.incidents ENABLE ROW LEVEL SECURITY;

--
-- TOC entry 2920 (class 0 OID 26946)
-- Dependencies: 265
-- Name: profiles; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

-- Completed on 2023-02-09 21:03:22

--
-- PostgreSQL database dump complete
--

